package Dashie;

/*
 * ---------------------------------------------------------------------------
 * "THE BEER-WARE LICENSE" (Revision 42):
 * <Eric.Slaweski@gmail.com> wrote this file. As long as you retain this notice 
 * you can do whatever you want with this stuff. If we meet some day, and you 
 * think this stuff is worth it, you can buy me a beer in return. Eric Slaweski
 * ----------------------------------------------------------------------------
 */

/**
 *
 * @author eslaweski
 */
public class Gui extends javax.swing.JFrame
{

    /**
     * Creates new form NewJFrame
     */
    public Gui()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel17 = new javax.swing.JLabel();
        led1 = new javax.swing.JToggleButton();
        led2 = new javax.swing.JToggleButton();
        led3 = new javax.swing.JToggleButton();
        led4 = new javax.swing.JToggleButton();
        led5 = new javax.swing.JToggleButton();
        brightLights = new javax.swing.JToggleButton();
        slider1 = new javax.swing.JSlider();
        slider2 = new javax.swing.JSlider();
        slider3 = new javax.swing.JSlider();
        slider4 = new javax.swing.JSlider();
        slider5 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        strobe1 = new javax.swing.JToggleButton();
        strobe2 = new javax.swing.JToggleButton();
        strobe3 = new javax.swing.JToggleButton();
        strobe4 = new javax.swing.JToggleButton();
        strobe5 = new javax.swing.JToggleButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        slider6 = new javax.swing.JSlider();
        slider7 = new javax.swing.JSlider();
        slider8 = new javax.swing.JSlider();
        slider9 = new javax.swing.JSlider();
        slider10 = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        comPort = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();

        jLabel17.setText("jLabel17");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        led1.setSelected(true);
        led1.setText("LED 1");
        led1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                led1ActionPerformed(evt);
            }
        });

        led2.setSelected(true);
        led2.setText("LED 2");
        led2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                led2ActionPerformed(evt);
            }
        });

        led3.setSelected(true);
        led3.setText("LED 3");
        led3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                led3ActionPerformed(evt);
            }
        });

        led4.setSelected(true);
        led4.setText("LED 4");
        led4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                led4ActionPerformed(evt);
            }
        });

        led5.setSelected(true);
        led5.setText("LED 5");
        led5.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                led5ActionPerformed(evt);
            }
        });

        brightLights.setText("Bright Lights");
        brightLights.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                brightLightsActionPerformed(evt);
            }
        });

        slider1.setMaximum(255);
        slider1.setValue(255);
        slider1.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                slider1StateChanged(evt);
            }
        });

        slider2.setMaximum(255);
        slider2.setValue(255);
        slider2.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                slider2StateChanged(evt);
            }
        });

        slider3.setMaximum(255);
        slider3.setValue(255);
        slider3.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                slider3StateChanged(evt);
            }
        });

        slider4.setMaximum(255);
        slider4.setValue(255);
        slider4.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                slider4StateChanged(evt);
            }
        });

        slider5.setMaximum(255);
        slider5.setValue(255);
        slider5.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                slider5StateChanged(evt);
            }
        });

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, slider1, org.jdesktop.beansbinding.ELProperty.create("${value}"), jLabel1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, slider2, org.jdesktop.beansbinding.ELProperty.create("${value}"), jLabel2, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, slider3, org.jdesktop.beansbinding.ELProperty.create("${value}"), jLabel3, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, slider4, org.jdesktop.beansbinding.ELProperty.create("${value}"), jLabel4, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, slider5, org.jdesktop.beansbinding.ELProperty.create("${value}"), jLabel5, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel6.setText("LED's");

        jLabel7.setText("Intensity");

        strobe1.setText("Strobe 1");
        strobe1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                strobe1ActionPerformed(evt);
            }
        });

        strobe2.setText("Strobe 2");
        strobe2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                strobe2ActionPerformed(evt);
            }
        });

        strobe3.setText("Strobe 3");
        strobe3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                strobe3ActionPerformed(evt);
            }
        });

        strobe4.setText("Strobe 4");
        strobe4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                strobe4ActionPerformed(evt);
            }
        });

        strobe5.setText("Strobe 5");
        strobe5.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                strobe5ActionPerformed(evt);
            }
        });

        jLabel8.setText("Strobe Speed");

        jLabel9.setText("(Hz)");

        slider6.setValue(0);
        slider6.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                slider6StateChanged(evt);
            }
        });

        slider7.setValue(0);
        slider7.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                slider7StateChanged(evt);
            }
        });

        slider8.setValue(0);
        slider8.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                slider8StateChanged(evt);
            }
        });

        slider9.setValue(0);
        slider9.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                slider9StateChanged(evt);
            }
        });

        slider10.setValue(0);
        slider10.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                slider10StateChanged(evt);
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, slider7, org.jdesktop.beansbinding.ELProperty.create("${value}"), jLabel15, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, slider6, org.jdesktop.beansbinding.ELProperty.create("${value}"), jLabel16, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, slider8, org.jdesktop.beansbinding.ELProperty.create("${value}"), jLabel18, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, slider9, org.jdesktop.beansbinding.ELProperty.create("${value}"), jLabel19, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, slider10, org.jdesktop.beansbinding.ELProperty.create("${value}"), jLabel20, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        comPort.setText("COM4");
        comPort.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                comPortActionPerformed(evt);
            }
        });

        jLabel21.setText("COM Port");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(led1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(led2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(led3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(led4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(led5)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel9)
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel8)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(slider6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(strobe1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel16)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(slider7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(strobe2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel15)
                                .addGap(23, 23, 23)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(strobe3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(slider8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel12))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel18)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(strobe4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(slider9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel19)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(strobe5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel20)))
                                .addGap(28, 28, 28)
                                .addComponent(jLabel13))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(slider10, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comPort))
                        .addGap(17, 17, 17)
                        .addComponent(jLabel14))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel6)
                        .addGap(353, 353, 353)
                        .addComponent(brightLights))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(slider1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(slider2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(slider3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(slider4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel5))
                            .addComponent(slider5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(led1)
                                .addComponent(led2)
                                .addComponent(led5)
                                .addComponent(brightLights)
                                .addComponent(led3)
                                .addComponent(led4)))
                        .addGap(21, 21, 21))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(slider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slider4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slider5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(strobe1)
                    .addComponent(strobe2)
                    .addComponent(strobe3)
                    .addComponent(strobe4)
                    .addComponent(strobe5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(slider6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(slider7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(slider8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(slider9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(slider10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel18)
                                            .addComponent(jLabel15)
                                            .addComponent(jLabel20)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel21)
                        .addGap(26, 26, 26)))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void led1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_led1ActionPerformed
        if (!slider1.getValueIsAdjusting()) {
            String string = "";
            if (led1.isSelected()) {
                string += "0";
                String hold = slider1.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe1.isSelected())
                string += slider6.getValue() + "";
            }
            else {
                string = "0000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_led1ActionPerformed

    private void led2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_led2ActionPerformed
        if (!slider2.getValueIsAdjusting()) {
            String string = "";
            if (led2.isSelected()) {
                string += "1";
                String hold = slider2.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe2.isSelected())
                string += slider7.getValue() + "";
            }
            else {
                string = "1000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_led2ActionPerformed

    private void led5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_led5ActionPerformed
        if (!slider5.getValueIsAdjusting()) {
            String string = "";
            if (led5.isSelected()) {
                string += "4";
                String hold = slider5.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe4.isSelected())
                string += slider10.getValue() + "";
            }
            else {
                string = "4000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_led5ActionPerformed

    private void brightLightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brightLightsActionPerformed
        // FIXME THIS IS NOT LINKED UP TO ANYTHING
    }//GEN-LAST:event_brightLightsActionPerformed

    private void led3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_led3ActionPerformed
        if (!slider3.getValueIsAdjusting()) {
            String string = "";
            if (led3.isSelected()) {
                string += "2";
                String hold = slider3.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe2.isSelected())
                string += slider8.getValue() + "";
            }
            else {
                string = "2000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_led3ActionPerformed

    private void led4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_led4ActionPerformed
        if (!slider4.getValueIsAdjusting()) {
            String string = "";
            if (led4.isSelected()) {
                string += "3";
                String hold = slider4.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe3.isSelected())
                string += slider9.getValue() + "";
            }
            else {
                string = "3000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_led4ActionPerformed

    private void slider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider1StateChanged
        if (!slider1.getValueIsAdjusting()) {
            String string = "";
            if (led1.isSelected()) {
                string += "0";
                String hold = slider1.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe1.isSelected())
                string += slider6.getValue() + "";
            }
            else {
                string = "0000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_slider1StateChanged

    private void slider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider2StateChanged
        if (!slider2.getValueIsAdjusting()) {
            String string = "";
            if (led2.isSelected()) {
                string += "1";
                String hold = slider2.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe1.isSelected())
                string += slider7.getValue() + "";
            }
            else {
                string = "1000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_slider2StateChanged

    private void slider3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider3StateChanged
        if (!slider3.getValueIsAdjusting()) {
            String string = "";
            if (led3.isSelected()) {
                string += "2";
                String hold = slider3.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe2.isSelected())
                string += slider8.getValue() + "";
            }
            else {
                string = "2000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_slider3StateChanged

    private void slider4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider4StateChanged
        if (!slider4.getValueIsAdjusting()) {
            String string = "";
            if (led4.isSelected()) {
                string += "3";
                String hold = slider4.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe3.isSelected())
                string += slider9.getValue() + "";
            }
            else {
                string = "3000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_slider4StateChanged

    private void slider5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider5StateChanged
        if (!slider5.getValueIsAdjusting()) {
            String string = "";
            if (led5.isSelected()) {
                string += "4";
                String hold = slider5.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe5.isSelected())
                string += slider10.getValue() + "";
            }
            else {
                string = "4000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_slider5StateChanged

    private void slider6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider6StateChanged
        if (!slider6.getValueIsAdjusting()) {
            String string = "";
            if (led1.isSelected()) {
                string += "0";
                String hold = slider1.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe1.isSelected())
                string += slider6.getValue() + "";
            }
            else {
                string = "0000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_slider6StateChanged

    private void slider7StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider7StateChanged
        if (!slider7.getValueIsAdjusting()) {
            String string = "";
            if (led2.isSelected()) {
                string += "1";
                String hold = slider2.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe2.isSelected())
                string += slider7.getValue() + "";
            }
            else {
                string = "1000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_slider7StateChanged

    private void slider8StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider8StateChanged
        if (!slider8.getValueIsAdjusting()) {
            String string = "";
            if (led3.isSelected()) {
                string += "2";
                String hold = slider3.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe3.isSelected())
                string += slider8.getValue() + "";
            }
            else {
                string = "2000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_slider8StateChanged

    private void slider9StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider9StateChanged
        if (!slider9.getValueIsAdjusting()) {
            String string = "";
            if (led4.isSelected()) {
                string += "3";
                String hold = slider4.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe4.isSelected())
                string += slider9.getValue() + "";
            }
            else {
                string = "3000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_slider9StateChanged

    private void comPortActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_comPortActionPerformed
    {//GEN-HEADEREND:event_comPortActionPerformed
        // FIXME THIS DOES NOT DO ANYTHING
    }//GEN-LAST:event_comPortActionPerformed

    private void strobe1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_strobe1ActionPerformed
    {//GEN-HEADEREND:event_strobe1ActionPerformed
if (!slider1.getValueIsAdjusting()) {
            String string = "";
            if (led1.isSelected()) {
                string += "0";
                String hold = slider1.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe1.isSelected())
                string += slider6.getValue() + "";
            }
            else {
                string = "0000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_strobe1ActionPerformed

    private void strobe2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_strobe2ActionPerformed
    {//GEN-HEADEREND:event_strobe2ActionPerformed
        if (!slider2.getValueIsAdjusting()) {
            String string = "";
            if (led2.isSelected()) {
                string += "1";
                String hold = slider2.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe2.isSelected())
                string += slider7.getValue() + "";
            }
            else {
                string = "1000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_strobe2ActionPerformed

    private void strobe3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_strobe3ActionPerformed
    {//GEN-HEADEREND:event_strobe3ActionPerformed
        if (!slider3.getValueIsAdjusting()) {
            String string = "";
            if (led3.isSelected()) {
                string += "2";
                String hold = slider3.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe2.isSelected())
                string += slider8.getValue() + "";
            }
            else {
                string = "2000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_strobe3ActionPerformed

    private void strobe4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_strobe4ActionPerformed
    {//GEN-HEADEREND:event_strobe4ActionPerformed
        if (!slider4.getValueIsAdjusting()) {
            String string = "";
            if (led4.isSelected()) {
                string += "3";
                String hold = slider4.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe3.isSelected())
                string += slider9.getValue() + "";
            }
            else {
                string = "3000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_strobe4ActionPerformed

    private void strobe5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_strobe5ActionPerformed
    {//GEN-HEADEREND:event_strobe5ActionPerformed
        if (!slider5.getValueIsAdjusting()) {
            String string = "";
            if (led5.isSelected()) {
                string += "4";
                String hold = slider5.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe5.isSelected())
                string += slider10.getValue() + "";
            }
            else {
                string = "4000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_strobe5ActionPerformed

    private void slider10StateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_slider10StateChanged
    {//GEN-HEADEREND:event_slider10StateChanged
        if (!slider10.getValueIsAdjusting()) {
            String string = "";
            if (led5.isSelected()) {
                string += "4";
                String hold = slider5.getValue() + "";
                int num = hold.length();
                while (3 - num > 0) {
                    string += "0";
                    num++;
                }
                string += hold;
                if(strobe5.isSelected())
                string += slider10.getValue() + "";
            }
            else {
                string = "4000";
            }
            serial.send(string);
        }
    }//GEN-LAST:event_slider10StateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                System.out.println("Setting up the connection...");
                Gui gui = new Gui();
                gui.setVisible(true);
                gui.serial.setPortName(gui.comPort.getText());
                System.out.print("Connected via serial cable to ");
                System.out.println(gui.comPort.getText() + ".");
                gui.serial.initialize();
            }
        });

    }

    private final SerialCommunicator serial = new SerialCommunicator();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton brightLights;
    private javax.swing.JTextField comPort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JToggleButton led1;
    private javax.swing.JToggleButton led2;
    private javax.swing.JToggleButton led3;
    private javax.swing.JToggleButton led4;
    private javax.swing.JToggleButton led5;
    private javax.swing.JSlider slider1;
    private javax.swing.JSlider slider10;
    private javax.swing.JSlider slider2;
    private javax.swing.JSlider slider3;
    private javax.swing.JSlider slider4;
    private javax.swing.JSlider slider5;
    private javax.swing.JSlider slider6;
    private javax.swing.JSlider slider7;
    private javax.swing.JSlider slider8;
    private javax.swing.JSlider slider9;
    private javax.swing.JToggleButton strobe1;
    private javax.swing.JToggleButton strobe2;
    private javax.swing.JToggleButton strobe3;
    private javax.swing.JToggleButton strobe4;
    private javax.swing.JToggleButton strobe5;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
